# Задача 39.
# Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут 
# в первом массиве), которых нет во втором массиве. Пользователь вводит число N - количество элементов 
# в первом массиве, затем N чисел - элементы массива. Затем число M - количество элементов во втором 
# массиве. Затем элементы второго массива.

# def arr(n):
#     list_n = []
#     for i in range(n):
#         list_n.append(int(input('Введите элемент массива: ')))
#     return list_n


# def main():
#     n = int(input('Введите количество элементов первого массива: '))
#     list_1 = arr(n)
#     m = int(input('Введите количество элементов второго массива: '))
#     list_2 = arr(m)
#     print(list_1, list_2)
#     print(dif_list(list_1, list_2))


# def dif_list(list_a, list_b):
#     res_list = []
#     for i in list_a:
#         if i not in list_b:
#             res_list.append(i)
#     return res_list

# main()




# Задача 41.
# Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит 
# количество элементов, у которых два соседних и, при этом, оба соседних элемента меньше данного. 
# Сначала вводится число N — количество элементов в массиве Далее записаны N чисел — элементы массива. 
# Массив состоит из целых чисел.

# def arr(n):
#     list_n = []
#     for i in range(n):
#         list_n.append(int(input('Введите элемент массива: ')))
#     return list_n


# def main():
#     n = int(input('Введите количество элементов первого массива: '))
#     list_1 = arr(n)
#     print(list_1)
#     print(digit_number(list_1))

# def digit_number(input_list):
#     count = 0
#     for i in range(1, len(input_list)-1):
#         if input_list[i] > input_list[i-1] and input_list[i] > input_list[i+1]:
#             count +=1
#     return count

# main()



# Задача 43.
# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, 
# что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. 
# Вводится список чисел. Все числа списка находятся на разных строках.
# Ввод:    Вывод:
# 12323      2

# def count_pair(list_: list[int]):
#     count = 0
#     for elem in set(list_):
#         count += list_.count(elem) // 2
#     return count

# def main():
#     list_1 = [1, 2, 3, 2, 3]
#     print(count_pair(list_1))

# main()




# Задача 45.
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n 
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа. 
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. 
# Программа получает на вход одно натуральное число k, не превосходящее 105. Программа должна вывести 
# все пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в 
# строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую 
# пару не дает).
# Ввод:      Вывод:
# 300        220 284

# def divisors(n: int):
#     sum_divisors = 0
#     for i in range(1, n // 2 + 1):
#         if n % i == 0:
#             sum_divisors += i
#     return sum_divisors

# def main():
#     k = int(input('Введите верхнюю границу, но не больше 100 000: '))
#     if k <= 100_000:
#         for i in range(1, k):
#             x = divisors(i)
#             if i < x <= k and i == divisors(x):
#                 print(i, x)
#     else:
#                 print('Вы ввели слишком большое число')
# main()



